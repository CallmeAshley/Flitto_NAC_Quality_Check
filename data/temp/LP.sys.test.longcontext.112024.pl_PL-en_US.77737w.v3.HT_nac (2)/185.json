{
    "source": "pl_PL",
    "target": "en_US",
    "text": "pojedynczego bitu do przedstawiania liczb 723 i 1,245 lub 6.254 i 5. Możesz również użyć pojedynczego bitu do\nprzedstawiania kolorów czerwonego i niebieskiego. Możesz nawet przedstawić dwa nie powiązane ze sobą obiekty\nza pomocą pojedynczego bitu. Na przykład, możesz przedstawić kolor czerwony i liczbę 3.256 za pomocą\npojedynczego bitu. Możesz przedstawić jakieś dwie rożne wartości za pomocą pojedynczego bitu. Jednakże możesz\nprzedstawić tylko dwie rożne wartości za pomocą pojedynczego bitu.\nTo mylące rzeczy, nawet bardzo, rożne bity mogą przedstawiać rożne rzeczy. Na przykład jeden bit może być\nużywany do przedstawiania wartości zero i jeden, podczas gdy sąsiedni bit może być używany do przedstawiania\nwartości prawda i fałsz . Jak można to odróżnić patrząc na te bity? Odpowiedź, nie można. Ale to ilustruje cała ideę\nkomputerowej struktury danych: dana jest to to co ty zdefiniujesz. Jeśli użyjesz bitu do przedstawienia boolowskiej\n(prawda/ fałsz) wartości wówczas ten bit (zdefiniowany przez ciebie) reprezentuje prawdę lub fałsz. Dla bitów",
    "trans": "a single bit to represent the numbers 723 and 1,245 or 6,245 and 5. A single bit can be also used to\nrepresent red and blue colour. You can even represent two unrelated objects\nby using a single bit. For instance, you can represent red and the number 3.256 using\na single bit. You can represent any two different values with a single bit. However, you can\nrepresent only two different quantities with a single bit.\nIt's confusing studd, a lot even, different bits can represent different things. For instance, one bit can be\nused to depict values zero and one, while the adjacent bit can be used to represent the\nvalues of true and false. How to tell the difference by looking at these bits? The answer is, you can't. But this illustrates the whole idea\nof the computer data structure: a given is what you define. If you use a bit to represent a Boolean\n(true/false) vvalue then that bit (defined by you) represents true or false. For bits"
}