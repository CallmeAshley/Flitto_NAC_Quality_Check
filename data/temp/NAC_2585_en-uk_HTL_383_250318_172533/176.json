{
    "source": "en_US",
    "target": "uk_UA",
    "text": "Nikto- Nikto should be already installed on your Kali VM. If you are using some\nother distribution, you can download Nikto using the following github command:\ngit clone https://github.com/sullo/nikto.git\ntestssl.sh- T o install testssl.sh on Kali VM, run the following command:\nsudo apt install testssl.sh\nInstructions\n1. Setting Up\nClean Up\nThe following commands are used to list all containers, kill a container and remove any\nunused network. Try running these commands to clean up your environment if you have\nother docker containers running on your system.\nCommand: docker ps -a\nCommand: docker kill <id>\nCommand: docker network prune\nSetup the docker container\nWe first pull the docker container using the following command,\nCommand: docker pull joeltmenayathil/apachescan:latest\nNow, run the docker container using the following command,\nCommand: docker run --name apachescan -p 80:80-p 443:443-it\njoeltmenayathil/apachescan\nThe parameters are as follows:\n--name apachescan: Set the container name to apachescan\n-p 80:80: Bind port 80 of container to port 80 of host VM\n-p 443:443: Bind port 443 of container to port 443 of host VM",
    "trans": "Nikto — Nikto має вже бути встановлений на вашій віртуальній машині Kali. Якщо ви використовуєте якийсь\nінший дистрибутив, ви можете завантажити Nikto за допомогою такої команди github:\ngit clone https://github.com/sullo/nikto.git\ntestssl.sh — Щоб встановити testssl.sh на віртуальну машину Kali, запустіть таку команду:\nsudo apt install testssl.sh\nІнструкції\n1. Встановлення\nОчищення\nНаступні команди використовуються для перегляду списку всіх контейнерів, знищення контейнера і видалення будь-якої\nневикористаної мережі. Спробуйте запустити ці команди для очищення вашого середовища, якщо у вас є\nінші докер-контейнери, які запущені у вашій системі.\nКоманда: docker ps -a\nКоманда: docker kill <id>\nКоманда: docker network prune\nНалаштування докер-контейнера\nСпочатку ми витягнемо докер-контейнер за допомогою такої команди,\nКоманда: docker pull joeltmenayathil/apachescan:latest\nТепер запустіть докер-контейнер за допомогою такої команди,\nКоманда: docker run --name apachescan -p 80:80-p 443:443-p 443:443-it\njoeltmenayathil/apachescan\nПараметри такі:\n--name apachescan: Встановити ім'я контейнера на apachescan\n-p 80:80: прив'язати порт 80 контейнера до порту 80 хоста віртуальної машини\n-p 443:443: прив'язати порт 443 контейнера до порту 443 хоста віртуальної машини"
}