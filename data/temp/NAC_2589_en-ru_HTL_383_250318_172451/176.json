{
    "source": "en_US",
    "target": "ru_RU",
    "text": "Nikto- Nikto should be already installed on your Kali VM. If you are using some\nother distribution, you can download Nikto using the following github command:\ngit clone https://github.com/sullo/nikto.git\ntestssl.sh- T o install testssl.sh on Kali VM, run the following command:\nsudo apt install testssl.sh\nInstructions\n1. Setting Up\nClean Up\nThe following commands are used to list all containers, kill a container and remove any\nunused network. Try running these commands to clean up your environment if you have\nother docker containers running on your system.\nCommand: docker ps -a\nCommand: docker kill <id>\nCommand: docker network prune\nSetup the docker container\nWe first pull the docker container using the following command,\nCommand: docker pull joeltmenayathil/apachescan:latest\nNow, run the docker container using the following command,\nCommand: docker run --name apachescan -p 80:80-p 443:443-it\njoeltmenayathil/apachescan\nThe parameters are as follows:\n--name apachescan: Set the container name to apachescan\n-p 80:80: Bind port 80 of container to port 80 of host VM\n-p 443:443: Bind port 443 of container to port 443 of host VM",
    "trans": "Nikto — программа Nikto должна быть уже установлена на вашей виртуальной машине Kali. Если вы используете\nдругой дистрибутив, вы можете загрузить Nikto с помощью следующей команды github:\ngit clone https://github.com/sullo/nikto.git\ntestssl.sh — чтобы установить testssl.sh на ВМ Kali, выполните следующую команду:\nsudo apt install testssl.sh\nИнструкции\n1. Настройка\nОчистка\nСледующие команды используются для составления списка всех контейнеров, завершения работы контейнера и удаления любой\nнеиспользуемой сети. Попробуйте выполнить эти команды для очистки среды, если в системе запущены\nдругие контейнеры docker.\nКоманда: docker ps -a\nКоманда: docker kill <id>\nКоманда: docker network prune\nНастройка контейнера docker\nСначала извлеките контейнер docker с помощью следующей команды:\nкоманда: docker pull joeltmenayathil/apachescan:latest\nЗатем запустите контейнер docker с помощью следующей команды:\nКоманда: docker run --name apachescan -p 80:80-p 443:443-it\njoeltmenayathil/apachescan\nПараметры указаны ниже:\n--name apachescan: Задайте имя контейнера на apachescan\n-p 80:80: привяжите порт 80 контейнера к порту 80 хоста ВМ\n-p 443:443: привяжите порт 443 контейнера к порту 443 хоста ВМ"
}