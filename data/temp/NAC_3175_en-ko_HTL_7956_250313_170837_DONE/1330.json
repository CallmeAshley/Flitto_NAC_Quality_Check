{
    "source": "en_US",
    "target": "ko_KR",
    "text": "The verification process for iOS builds is, unfortunately, a lot more complex than for Android. The two main issues with Apple's current policies and infrastructure are as follows:\nApple insists on using FairPlay encryption to “protect” even free and open source apps from “app pirates” which makes obtaining the executable code of apps impossible without a jailbroken device. To solve this issue, Apple would simply need to allow submitting unencryptable binaries to the App Store. This would not affect security since the code would still be signed – and would enable anyone to check the integrity of apps supporting reproducible builds without endangering the integrity and security of their devices.\nBuilding your own reproducible binaries is difficult because macOS doesn't support containers like Docker. If Apple followed in the footsteps of Linux (and even Microsoft!) and added container support, it would eliminate the need for steps 1-3 in the guide below.",
    "trans": "불행하게도 iOS빌드 인증 절차는 안드로이드의 경우에 비해 훨씬 복잡하다. 애플의 현 정책 및 인프라와 관련된 두 가지 문제는 다음과 같다:\n애플은 심지어 무료 혹은 오픈 소스 앱들까지 '앱에 대한 저작권 침해'로부터 '보호'하기 위해서라며 페어플레이 암호화 이용을 강제하는데 이 때문에  탈옥 기기 없이 앱 실행 코드를 얻기란 불가능하다. 이 문제를 해결하기 위해서 애플은 그저 앱 스토어에 암호화할 수 없는 바이너리 제출을 허용하기만 하면 된다. 코드는 여전히 서명이 이루어져야 하기 때문에 이로 인해 보안에 영향이 가는 일은 없으며 또한 누구든 각자가 가진 기기의 온전성 및 보안에 위해를 가할 일 없이 재생산 가능한 빌드를 지원하는 앱의 온전성을 확인할 수 있게될 것이다.\n맥 운영체제는 도커와 같은 컨테이너를 지원하지 않기 때문에 재생산 가능한 자신만의 바이너리를 구축하기는 어렵다. 애플이 리눅스(또 마이크로소프트까지도!)의 발자취를 따라 컨테이너 지원을 추가한다면 아래의 안내 사항에 명시된 1~3단계를 따를 필요조차 없다."
}