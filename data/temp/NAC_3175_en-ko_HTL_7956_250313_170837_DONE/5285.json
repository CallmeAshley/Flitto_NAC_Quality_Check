{
    "source": "en_US",
    "target": "ko_KR",
    "text": "If a gap value of K is chosen, creating K entirely new lists would be computationally expensive. Instead of creating new lists, shell sort sorts interleaved lists in-place with a variation of the insertion sort algorithm. The insertion sort algorithm variant redefines the concept of \"next\" and \"previous\" items. For an item at index X, the next item is at X + K, instead of X + 1, and the previous item is at X - K instead of X - 1.",
    "trans": "간격 값 K가 선택되면, K개의 새로운 리스트를 만드는 것은 계산적으로 비용이 많이 들 수 있습니다. 새로운 리스트를 만드는 대신, 셸 정렬은 삽입 정렬 알고리즘의 변형을 사용하여 겹치는 리스트들을 제자리에서 정렬합니다. 이 삽입 정렬 알고리즘의 변형은 \"다음\"과 \"이전\" 항목의 개념을 다시 정의합니다. 인덱스 X에 있는 항목에 대해, 다음 항목은  X + 1 대신 X + K에 위치하고, 이전 항목은 X - 1 대신 X - K에 위치합니다."
}