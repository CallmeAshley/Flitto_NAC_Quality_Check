{
    "source": "en_US",
    "target": "fr_FR",
    "text": "Create a smoothed version of the signal called filtsig1 by computing the average value over a +/- k samples using the numpy.mean() function and k=20. You will need to make a decision as to how to handle the first and last k samples, for which there won’t be a full k samples available in both directions. In a single plot, plot the noisy signal and the filtered signal overlaid on the original signal.\nC. Define a vector hfilt that corresponds to box of length N=2k+1 and height 1/N. Create a second smoothed version of the signal called filtsig2 by convolving the base signal with hfilt using the numpy.convolve() function. Plot the two different filtered signal outputs overlaid on each other. Note that the convolve function will change the length, so you will need to define a new time vector for that.\n# Part A\n# Assignment 2 - Smoothing Signals",
    "trans": "Création d'une version lissée du signal appelée filtsig1 en calculant la valeur moyenne sur des échantillons +/- k en utilisant la fonction numpy.mean() et k=20. Il est nécessaire de prendre une décision quant à la manière de traiter les premiers et derniers échantillons k, pour lesquels il n'y aura pas k échantillons complets disponibles dans les deux directions. Dans un seul graphique, tracer le signal bruité et le signal filtré superposé au signal original.\nC. Définir un vecteur hfilt correspondant à une boîte de longueur N=2k+1 et de hauteur 1/N. Créer une deuxième version lissée du signal appelée filtsig2 en convoluant le signal de base avec hfilt en utilisant la fonction numpy.convolve(). Tracer les deux différentes sorties de signaux filtrés superposées l'une sur l'autre. Notez que la fonction de convolution changera la longueur, il sera donc nécessaire de définir un nouveau vecteur temps pour cela.\n# Partir A\n# Affectation 2 - Lissage des signaux"
}