{
    "source": "en_US",
    "target": "fr_FR",
    "text": "When using division, the result will always be a float regardless of whether the operands are ints or floats.\nExpressions are statements which evaluate to some value. They could be literal values or the mathematical operations or an instance the input() function.\nfloats can be created by writing a number with a decimal point or by using the e scientific notation.\nWhen the operands of addition, subtraction or multiplication are both ints, the result will always be an int.\nEach value in Python has an associated data type which defines the kind of information it stores.\nThe float data type represents all floating point numbers which are those which contain a fractional part.\nThe int data type represents all positive and negative integers (whole numbers).\nOver the last few slides, we have looked at expressions and seen data types such as int and float.\nWhen at least one operand of +, - or * is a float, the result will always be a float.\nfloats are approximations, and rounding error discrepancies are common when dealing with precise numbers.\nWe looked at which data types the basic operations return:\nA simple expression is an expression composed of an operator and its operands (generally two).\nStatements are the building blocks of a program. Every valid line of Python code is a statement.\nWe formally introduced two data types (in addition to str which we saw previously):",
    "trans": "Lorsqu'on utilise la division, le résultat sera toujours un nombre à virgule flottante (float), que les opérandes soient des entiers (int) ou des float.\nLes expressions sont des instructions qui s'évaluent à une valeur. Elles peuvent être des valeurs littérales, des opérations mathématiques ou encore une instance de la fonction input().\nLes float peuvent être créés en écrivant un nombre avec un point décimal ou en utilisant la notation scientifique e.\nLorsque les opérandes d'une addition (+), d'une soustraction (-) ou d'une multiplication (*) sont tous deux des int, le résultat sera toujours un int.\nChaque valeur en Python possède un type de données associé, qui définit la nature de l'information qu'elle stocke.\nLe type de données float représente tous les nombres à virgule flottante, c'est-à-dire ceux qui contiennent une partie fractionnaire.\nLe type de données int représente tous les nombres entiers, positifs et négatifs.\nAu cours des dernières diapositives, nous avons étudié les expressions et vu des types de données tels que int et float.\nLorsque l'un des opérandes d'une opération +, - ou * est un float, le résultat sera toujours un float.\nLes float sont des approximations, et il est courant d'observer des erreurs d'arrondi lors de calculs précis.\nNous avons examiné les types de données renvoyés par les opérations de base.\nUne expression simple est une expression composée d'un opérateur et de ses opérandes (généralement une paire).\nLes instructions sont les éléments à part entière d'un programme. Chaque ligne valide de code Python est une instruction.\nNous avons formellement introduit deux types de données (en plus de str, que nous avons vu recemment) :"
}